@@Ui(
  label: "Language",
  icon: "/images/icons/language.svg"
)
context Language {
    current = "de_DE"

    options = [
        @UrlContext(
            value: "de_DE", label: "German", fallbacks: [],
            match: url.path|split("/")|get(1)|lowercase == "de_de"
        ),
        @UrlContext(
            value: "en_US", label: "English (American)", fallbacks: ["de_DE"],
            match: url.path|split("/")|get(1)|lowercase == "en_us"
        ),
        @UrlContext(
            value: "en_GB", label: "English (British)", fallbacks: ["en_US"],
            match: url.path|split("/")|get(1)|lowercase == "en_gb"
        ),
    ]
}

// NOTE: Currently available are UrlContext, CookieContext and maybe HeaderContext.
//       HeaderContext is a bit tricky, because you could not change it in a template.

// NOTE: Does en_GB now fallback to de_DE also, or does it stop, when en_US is not present?

// NOTE: Are you able to mix UrlContext, CookieContext and HeaderContext or do the options have to be homogenous?
//       Having the ability to mix them, would make it more powerful, but the CMS couldn't easily change the contexts on its own.
//       The developer would have to provide the menu with an extra template.
//       There could be a CMS default template render a UrlContext Menu, with links to the corrosponding URLs, but you wouldn't be able to
//       do the same with a HeaderContext, because the Template could not set a RequestHeader.
