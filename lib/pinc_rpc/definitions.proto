syntax = "proto3";

package pinc;

service Tags {
  rpc string(TagRequest) returns (StringResponse);
  rpc int(TagRequest) returns (IntResponse);
  rpc float(TagRequest) returns (FloatResponse);
  rpc bool(TagRequest) returns (BoolResponse);
  rpc array(TagRequest) returns (ArrayResponse);
  rpc record(TagRequest) returns (RecordResponse);
}

message TagRequest {
  bool required = 1;
  repeated string key = 2;
  map<string, t_value> attributes = 3;
  map<string, t_value> childMeta = 4;
  optional t_value value = 5;
}

// ========================= STRING =========================

message StringResponse {
  string value = 1;
  map<string, t_value> meta = 2;
}

// ========================= FLOAT =========================

message FloatResponse {
  float value = 1;
  map<string, t_value> meta = 2;
}

// ========================= INT =========================

message IntResponse {
  int32 value = 1;
  map<string, t_value> meta = 2;
}

// ========================= BOOL =========================

message BoolResponse {
  bool value = 1;
  map<string, t_value> meta = 2;
}

// ========================= ARRAY =========================

message ArrayResponse {
  repeated t_value value = 1;
  map<string, t_value> meta = 2;
}

// ========================= RECORD =========================

message RecordResponse {
  map<string, t_value> value = 1;
  map<string, t_value> meta = 2;
}

// ========================= TYPES =========================

message t_struct {
  map<string, t_value> value = 1;
}

message t_list {
  repeated t_value value = 1;
}

message t_null {}

message t_value {
  oneof value {
    t_null vNull = 1;
    string vString = 2;
    float vFloat = 3;
    int32 vInt = 4;
    bool vBool = 5;
    t_struct vRecord = 6;
    t_list vList = 7;
  }
}
