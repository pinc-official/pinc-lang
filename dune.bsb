;;;;{BSB GENERATED: NO EDIT
(subdir ./lib
(rule
(targets  Pinc.ast)
 (deps (:inputs  Pinc.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc.cmj Pinc.cmi Pinc.cmt Pinc.js)
 (mode (promote (until-clean) (only Pinc.js)))(deps (:inputs  Pinc.ast)  (:ast_deps .././lib/Pinc.ast ) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Ast.ast)
 (deps (:inputs  Pinc_Ast.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Ast.cmj Pinc_Ast.cmi Pinc_Ast.cmt Pinc_Ast.js)
 (mode (promote (until-clean) (only Pinc_Ast.js)))(deps (:inputs  Pinc_Ast.ast)  (:ast_deps .././lib/Pinc_Ast.ast ) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc_Ast.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_HTML.ast)
 (deps (:inputs  Pinc_HTML.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_HTML.iast)
 (deps (:inputs  Pinc_HTML.mli) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_HTML.cmi Pinc_HTML.cmti)
 (deps (:inputs  Pinc_HTML.iast)  (:ast_deps .././lib/Pinc_HTML.ast .././lib/Pinc_HTML.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -o Pinc_HTML.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_HTML.cmj Pinc_HTML.cmt Pinc_HTML.js)
 (mode (promote (until-clean) (only Pinc_HTML.js)))(deps (:inputs  Pinc_HTML.ast)  Pinc_HTML.cmi (:ast_deps .././lib/Pinc_HTML.ast .././lib/Pinc_HTML.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -bs-read-cmi -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc_HTML.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Lexer.ast)
 (deps (:inputs  Pinc_Lexer.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Lexer.iast)
 (deps (:inputs  Pinc_Lexer.mli) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Lexer.cmi Pinc_Lexer.cmti)
 (deps (:inputs  Pinc_Lexer.iast)  (:ast_deps .././lib/Pinc_Lexer.ast .././lib/Pinc_Lexer.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -o Pinc_Lexer.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Lexer.cmj Pinc_Lexer.cmt Pinc_Lexer.js)
 (mode (promote (until-clean) (only Pinc_Lexer.js)))(deps (:inputs  Pinc_Lexer.ast)  Pinc_Lexer.cmi (:ast_deps .././lib/Pinc_Lexer.ast .././lib/Pinc_Lexer.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -bs-read-cmi -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc_Lexer.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Token.ast)
 (deps (:inputs  Pinc_Token.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Token.iast)
 (deps (:inputs  Pinc_Token.mli) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Token.cmi Pinc_Token.cmti)
 (deps (:inputs  Pinc_Token.iast)  (:ast_deps .././lib/Pinc_Token.ast .././lib/Pinc_Token.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -o Pinc_Token.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Token.cmj Pinc_Token.cmt Pinc_Token.js)
 (mode (promote (until-clean) (only Pinc_Token.js)))(deps (:inputs  Pinc_Token.ast)  Pinc_Token.cmi (:ast_deps .././lib/Pinc_Token.ast .././lib/Pinc_Token.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -bs-read-cmi -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc_Token.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Parser.ast)
 (deps (:inputs  Pinc_Parser.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Parser.iast)
 (deps (:inputs  Pinc_Parser.mli) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Parser.cmi Pinc_Parser.cmti)
 (deps (:inputs  Pinc_Parser.iast)  (:ast_deps .././lib/Pinc_Parser.ast .././lib/Pinc_Parser.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -o Pinc_Parser.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Parser.cmj Pinc_Parser.cmt Pinc_Parser.js)
 (mode (promote (until-clean) (only Pinc_Parser.js)))(deps (:inputs  Pinc_Parser.ast)  Pinc_Parser.cmi (:ast_deps .././lib/Pinc_Parser.ast .././lib/Pinc_Parser.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -bs-read-cmi -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc_Parser.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Position.ast)
 (deps (:inputs  Pinc_Position.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Position.iast)
 (deps (:inputs  Pinc_Position.mli) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Position.cmi Pinc_Position.cmti)
 (deps (:inputs  Pinc_Position.iast)  (:ast_deps .././lib/Pinc_Position.ast .././lib/Pinc_Position.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -o Pinc_Position.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Position.cmj Pinc_Position.cmt Pinc_Position.js)
 (mode (promote (until-clean) (only Pinc_Position.js)))(deps (:inputs  Pinc_Position.ast)  Pinc_Position.cmi (:ast_deps .././lib/Pinc_Position.ast .././lib/Pinc_Position.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -bs-read-cmi -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc_Position.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Operators.ast)
 (deps (:inputs  Pinc_Operators.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Operators.cmj Pinc_Operators.cmi Pinc_Operators.cmt Pinc_Operators.js)
 (mode (promote (until-clean) (only Pinc_Operators.js)))(deps (:inputs  Pinc_Operators.ast)  (:ast_deps .././lib/Pinc_Operators.ast ) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc_Operators.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Diagnostics.ast)
 (deps (:inputs  Pinc_Diagnostics.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Diagnostics.cmj Pinc_Diagnostics.cmi Pinc_Diagnostics.cmt Pinc_Diagnostics.js)
 (mode (promote (until-clean) (only Pinc_Diagnostics.js)))(deps (:inputs  Pinc_Diagnostics.ast)  (:ast_deps .././lib/Pinc_Diagnostics.ast ) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc_Diagnostics.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Interpreter.ast)
 (deps (:inputs  Pinc_Interpreter.ml) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Interpreter.iast)
 (deps (:inputs  Pinc_Interpreter.mli) )
(action
 (run bsc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Interpreter.cmi Pinc_Interpreter.cmti)
 (deps (:inputs  Pinc_Interpreter.iast)  (:ast_deps .././lib/Pinc_Interpreter.ast .././lib/Pinc_Interpreter.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -I .    -w a -o Pinc_Interpreter.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Pinc_Interpreter.cmj Pinc_Interpreter.cmt Pinc_Interpreter.js)
 (mode (promote (until-clean) (only Pinc_Interpreter.js)))(deps (:inputs  Pinc_Interpreter.ast)  Pinc_Interpreter.cmi (:ast_deps .././lib/Pinc_Interpreter.ast .././lib/Pinc_Interpreter.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/ewert/Documents/Projekte/pinc-lang/pinc-lang -cwd ./lib %{ast_deps}) (run bsc -bs-read-cmi -I .    -w a -bs-package-name pinc-lang-js -bs-package-output es6:./lib:.js -o Pinc_Interpreter.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  Pinc_Interpreter.js Pinc_Diagnostics.js Pinc_Operators.js Pinc_Position.js Pinc_Parser.js Pinc_Token.js Pinc_Lexer.js Pinc_HTML.js Pinc_Ast.js Pinc.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))


(subdir .melange.eobjs)

(data_only_dirs node_modules .melange.eobjs)
(alias (name bsb_world))
;;;;BSB GENERATED: NO EDIT}
